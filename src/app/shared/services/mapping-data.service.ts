import { Injectable } from '@angular/core';
import { ControlJson } from '../interfaces/control-json.interface';
import { ControlCascadingService } from './control-cascading/control-cascading.service';
import { ControlExpressionService } from './control-expression/control-expression.service';

@Injectable({
  providedIn: 'root',
})
export class MappingJsonData {

  jsonControls: ControlJson[] = [];

  classes = [
    {
      "key": null,
      "selectedKey": null,
      "text": "Select an Option",
      "icon": null,
      "extra": null
    },
    {
      "key": "ARCHITECTURAL",
      "selectedKey": "ARCHITECTURAL",
      "text": "ARCHITECTURAL",
      "icon": null,
      "extra": null
    },
    {
      "key": "Building indoor and outdoor",
      "selectedKey": "Building indoor and outdoor",
      "text": "Building indoor and outdoor",
      "icon": null,
      "extra": null
    },
    {
      "key": "CIVIL",
      "selectedKey": "CIVIL",
      "text": "CIVIL",
      "icon": null,
      "extra": null
    },
    {
      "key": "Doors",
      "selectedKey": "Doors",
      "text": "Doors",
      "icon": null,
      "extra": null
    },
    {
      "key": "Dot Matrix",
      "selectedKey": "Dot Matrix",
      "text": "Dot Matrix",
      "icon": null,
      "extra": null
    },
    {
      "key": "ELECTRICAL",
      "selectedKey": "ELECTRICAL",
      "text": "ELECTRICAL",
      "icon": null,
      "extra": null
    },
    {
      "key": "Fire Fighting & Suppression System",
      "selectedKey": "Fire Fighting & Suppression System",
      "text": "Fire Fighting & Suppression System",
      "icon": null,
      "extra": null
    },
    {
      "key": "First Aid Kit",
      "selectedKey": "First Aid Kit",
      "text": "First Aid Kit",
      "icon": null,
      "extra": null
    },
    {
      "key": "Flooring",
      "selectedKey": "Flooring",
      "text": "Flooring",
      "icon": null,
      "extra": null
    },
    {
      "key": "Furniture",
      "selectedKey": "Furniture",
      "text": "Furniture",
      "icon": null,
      "extra": null
    },
    {
      "key": "LOW CURRENT",
      "selectedKey": "LOW CURRENT",
      "text": "LOW CURRENT",
      "icon": null,
      "extra": null
    },
    {
      "key": "Leaflet Holder",
      "selectedKey": "Leaflet Holder",
      "text": "Leaflet Holder",
      "icon": null,
      "extra": null
    },
    {
      "key": "Lighting Maintenance",
      "selectedKey": "Lighting Maintenance",
      "text": "Lighting Maintenance",
      "icon": null,
      "extra": null
    },
    {
      "key": "MECHANICAL",
      "selectedKey": "MECHANICAL",
      "text": "MECHANICAL",
      "icon": null,
      "extra": null
    },
    {
      "key": "PLUMBING",
      "selectedKey": "PLUMBING",
      "text": "PLUMBING",
      "icon": null,
      "extra": null
    },
    {
      "key": "Painting",
      "selectedKey": "Painting",
      "text": "Painting",
      "icon": null,
      "extra": null
    },
    {
      "key": "TV and Screen Issue",
      "selectedKey": "TV and Screen Issue",
      "text": "TV and Screen Issue",
      "icon": null,
      "extra": null
    },
    {
      "key": "signage",
      "selectedKey": "signage",
      "text": "signage",
      "icon": null,
      "extra": null
    }
  ];

  departments = [
    {
      "key": null,
      "selectedKey": null,
      "text": "Select an Option",
      "icon": null,
      "extra": null
    },
    {
      "key": "Consumer Customer Care Center (SMC)",
      "selectedKey": null,
      "text": "Consumer Customer Care Center (SMC)",
      "icon": null,
      "extra": null
    },
    {
      "key": "Business Customer Care Center (BCSMC)",
      "selectedKey": null,
      "text": "Business Customer Care Center (BCSMC)",
      "icon": null,
      "extra": null
    },
    {
      "key": "Other Department",
      "selectedKey": null,
      "text": "Other Department",
      "icon": null,
      "extra": null
    }
  ];

  constructor(private controlExpressionService: ControlExpressionService, private controlCascadingService: ControlCascadingService) { }

  getJsonData() {
    this.jsonControls = [
      {
        options: [
          {
            key: 'FacilityServiceOffice',
            selectedKey: null,
            text: 'Office',
            icon: null,
            extra: null,
          },
        ],
        cascadingChildrenIndexes: null,
        cascadingParentIndexes: null,
        searchChildrenIndexes: null,
        isMultiSelect: false,
        isCancelDelegation: false,
        isExternalDataSource: false,
        value: [],
        id: 'Drop-1',
        type: 'DropDown',
        format: '',
        contentType: null,
        index: 2,
        formCode: null,
        valuePathEn: null,
        valuePathAr: null,
        readOnly: false,
        isVisibleInViewMode: false,
        isRequired: true,
        isValueDynamic: true,
        dataSourceType: 'lov',
        dataSourceUrl: null,
        dataSourceId: 'lov-166',
        mappedValue: null,
        name: 'BuildingType',
        translations: null,
        label: 'Building Type',
        description: null,
        placeHolder: 'Choose Building Type',
        isVisible: true,
        roles: [],
        icon: '',
        style: {
          border: '',
          borderType: '',
          borderColor: '',
          backgroundColor: '',
          textColor: '',
          textAlign: '',
          font: '',
          fontSize: '',
        },
        validations: [
          {
            name: 'required',
            value: '',
            message: 'please select value',
            translations: null,
          },
        ],
        dependencies: [],
        conditionalView: {
          validConditions: 0,
          minimumAcceptableConditionsNumber: null,
          conditions: null,
        },
        relationEquation: null,
        isSubmitted: true,
        savedValues: null,
        tableOperation: null,
      },
      {
        options: [],
        cascadingChildrenIndexes: null,
        cascadingParentIndexes: null,
        searchChildrenIndexes: null,
        isMultiSelect: false,
        isCancelDelegation: false,
        isExternalDataSource: false,
        value: [
          {
            id: 'Maintenance',
            text: 'Maintenance',
          },
        ],
        id: 'text-1',
        type: 'DropDown',
        format: '',
        contentType: null,
        index: 3,
        formCode: null,
        valuePathEn: null,
        valuePathAr: null,
        readOnly: true,
        isVisibleInViewMode: false,
        isRequired: false,
        isValueDynamic: false,
        dataSourceType: '',
        dataSourceUrl: null,
        dataSourceId: '',
        mappedValue: null,
        name: 'ServiceType',
        translations: null,
        label: 'Service Type',
        description: null,
        placeHolder: '',
        isVisible: false,
        roles: [],
        icon: '',
        style: {
          border: '',
          borderType: '',
          borderColor: '',
          backgroundColor: '',
          textColor: '',
          textAlign: '',
          font: '',
          fontSize: '',
        },
        validations: [],
        dependencies: [],
        conditionalView: {
          validConditions: 0,
          minimumAcceptableConditionsNumber: null,
          conditions: null,
        },
        relationEquation: null,
        isSubmitted: true,
        savedValues: null,
        tableOperation: null,
      },
      {
        options: [
          {
            key: 'ARCHITECTURAL',
            selectedKey: 'ARCHITECTURAL',
            text: 'ARCHITECTURAL',
            icon: null,
            extra: null,
          },
          {
            key: 'Building indoor and outdoor',
            selectedKey: 'Building indoor and outdoor',
            text: 'Building indoor and outdoor',
            icon: null,
            extra: null,
          },
          {
            key: 'CIVIL',
            selectedKey: 'CIVIL',
            text: 'CIVIL',
            icon: null,
            extra: null,
          },
          {
            key: 'Doors',
            selectedKey: 'Doors',
            text: 'Doors',
            icon: null,
            extra: null,
          },
          {
            key: 'Dot Matrix',
            selectedKey: 'Dot Matrix',
            text: 'Dot Matrix',
            icon: null,
            extra: null,
          },
          {
            key: 'ELECTRICAL',
            selectedKey: 'ELECTRICAL',
            text: 'ELECTRICAL',
            icon: null,
            extra: null,
          },
          {
            key: 'Fire Fighting & Suppression System',
            selectedKey: 'Fire Fighting & Suppression System',
            text: 'Fire Fighting & Suppression System',
            icon: null,
            extra: null,
          },
          {
            key: 'First Aid Kit',
            selectedKey: 'First Aid Kit',
            text: 'First Aid Kit',
            icon: null,
            extra: null,
          },
          {
            key: 'Flooring',
            selectedKey: 'Flooring',
            text: 'Flooring',
            icon: null,
            extra: null,
          },
          {
            key: 'Furniture',
            selectedKey: 'Furniture',
            text: 'Furniture',
            icon: null,
            extra: null,
          },
          {
            key: 'LOW CURRENT',
            selectedKey: 'LOW CURRENT',
            text: 'LOW CURRENT',
            icon: null,
            extra: null,
          },
          {
            key: 'Leaflet Holder',
            selectedKey: 'Leaflet Holder',
            text: 'Leaflet Holder',
            icon: null,
            extra: null,
          },
          {
            key: 'Lighting Maintenance',
            selectedKey: 'Lighting Maintenance',
            text: 'Lighting Maintenance',
            icon: null,
            extra: null,
          },
          {
            key: 'MECHANICAL',
            selectedKey: 'MECHANICAL',
            text: 'MECHANICAL',
            icon: null,
            extra: null,
          },
          {
            key: 'PLUMBING',
            selectedKey: 'PLUMBING',
            text: 'PLUMBING',
            icon: null,
            extra: null,
          },
          {
            key: 'Painting',
            selectedKey: 'Painting',
            text: 'Painting',
            icon: null,
            extra: null,
          },
          {
            key: 'TV and Screen Issue',
            selectedKey: 'TV and Screen Issue',
            text: 'TV and Screen Issue',
            icon: null,
            extra: null,
          },
          {
            key: 'signage',
            selectedKey: 'signage',
            text: 'signage',
            icon: null,
            extra: null,
          },
        ],
        cascadingChildrenIndexes: [5],
        cascadingParentIndexes: null,
        searchChildrenIndexes: null,
        isMultiSelect: false,
        isCancelDelegation: false,
        isExternalDataSource: true,
        value: [],
        id: 'Drop-2',
        type: 'DropDown',
        format: '',
        contentType: null,
        index: 4,
        formCode: null,
        valuePathEn: null,
        valuePathAr: null,
        readOnly: false,
        isVisibleInViewMode: false,
        isRequired: true,
        isValueDynamic: true,
        dataSourceType: 'lov',
        dataSourceUrl: null,
        dataSourceId: 'lov-167',
        mappedValue: null,
        name: 'WorkClass',
        translations: null,
        label: 'Work Class',
        description: null,
        placeHolder: 'Select Work Class',
        isVisible: true,
        roles: [],
        icon: '',
        style: {
          border: '',
          borderType: '',
          borderColor: '',
          backgroundColor: '',
          textColor: '',
          textAlign: '',
          font: '',
          fontSize: '',
        },
        validations: [
          {
            name: 'required',
            value: '',
            message: 'please select value',
            translations: null,
          },
        ],
        dependencies: [],
        conditionalView: {
          validConditions: 0,
          minimumAcceptableConditionsNumber: null,
          conditions: null,
        },
        relationEquation: null,
        isSubmitted: true,
        savedValues: null,
        tableOperation: null,
      },
      {
        options: [],
        cascadingChildrenIndexes: null,
        cascadingParentIndexes: [4],
        searchChildrenIndexes: null,
        isMultiSelect: false,
        isCancelDelegation: false,
        isExternalDataSource: true,
        value: [],
        id: 'Drop-3',
        type: 'DropDown',
        format: '',
        contentType: null,
        index: 5,
        formCode: null,
        valuePathEn: null,
        valuePathAr: null,
        readOnly: false,
        isVisibleInViewMode: false,
        isRequired: true,
        isValueDynamic: false,
        dataSourceType: 'lov',
        dataSourceUrl:
          'Value/GetDynamicByListCode/FacilityServicesWorkType?parameters={0}',
        dataSourceId: 'lov-168',
        mappedValue: null,
        name: 'WorkType',
        translations: null,
        label: 'Work Type',
        description: null,
        placeHolder: 'Select Work Type',
        isVisible: true,
        roles: [],
        icon: '',
        style: {
          border: '',
          borderType: '',
          borderColor: '',
          backgroundColor: '',
          textColor: '',
          textAlign: '',
          font: '',
          fontSize: '',
        },
        validations: [
          {
            name: 'required',
            value: '',
            message: 'please select value',
            translations: null,
          },
        ],
        dependencies: [],
        conditionalView: {
          validConditions: 0,
          minimumAcceptableConditionsNumber: null,
          conditions: null,
        },
        relationEquation: null,
        isSubmitted: true,
        savedValues: null,
        tableOperation: null,
      },
      {
        options: [
          {
            key: 'Consumer Customer Care Center (SMC)',
            selectedKey: null,
            text: 'Consumer Customer Care Center (SMC)',
            icon: null,
            extra: null,
          },
          {
            key: 'Business Customer Care Center (BCSMC)',
            selectedKey: null,
            text: 'Business Customer Care Center (BCSMC)',
            icon: null,
            extra: null,
          },
          {
            key: 'Other Department',
            selectedKey: null,
            text: 'Other Department',
            icon: null,
            extra: null,
          },
        ],
        cascadingChildrenIndexes: [7, 8, 9, 10],
        cascadingParentIndexes: null,
        searchChildrenIndexes: null,
        isMultiSelect: false,
        isCancelDelegation: false,
        isExternalDataSource: false,
        value: [],
        id: 'Drop-4',
        type: 'DropDown',
        format: '',
        contentType: null,
        index: 6,
        formCode: null,
        valuePathEn: null,
        valuePathAr: null,
        readOnly: false,
        isVisibleInViewMode: false,
        isRequired: true,
        isValueDynamic: true,
        dataSourceType: 'lov',
        dataSourceUrl: null,
        dataSourceId: 'lov-141',
        mappedValue: null,
        name: 'department',
        translations: null,
        label: 'Department',
        description: null,
        placeHolder: 'Choose Department',
        isVisible: true,
        roles: [],
        icon: '',
        style: {
          border: '',
          borderType: '',
          borderColor: '',
          backgroundColor: '',
          textColor: '',
          textAlign: '',
          font: '',
          fontSize: '',
        },
        validations: [
          {
            name: 'required',
            value: '',
            message: 'please select value',
            translations: null,
          },
        ],
        dependencies: [],
        conditionalView: {
          validConditions: 0,
          minimumAcceptableConditionsNumber: null,
          conditions: null,
        },
        relationEquation: null,
        isSubmitted: true,
        savedValues: null,
        tableOperation: null,
      },
      {
        options: [],
        cascadingChildrenIndexes: [8, 9, 10],
        cascadingParentIndexes: [6],
        searchChildrenIndexes: null,
        isMultiSelect: false,
        isCancelDelegation: false,
        isExternalDataSource: true,
        value: [],
        id: 'Drop-5',
        type: 'DropDown',
        format: '',
        contentType: null,
        index: 7,
        formCode: null,
        valuePathEn: null,
        valuePathAr: null,
        readOnly: false,
        isVisibleInViewMode: false,
        isRequired: true,
        isValueDynamic: false,
        dataSourceType: 'lov',
        dataSourceUrl: 'Value/GetDynamicByListCode/Region?parameters={0}',
        dataSourceId: 'lov-142',
        mappedValue: null,
        name: 'Region',
        translations: null,
        label: 'Region',
        description: null,
        placeHolder: 'Select Region',
        isVisible: true,
        roles: [],
        icon: '',
        style: {
          border: '',
          borderType: '',
          borderColor: '',
          backgroundColor: '',
          textColor: '',
          textAlign: '',
          font: '',
          fontSize: '',
        },
        validations: [
          {
            name: 'required',
            value: '',
            message: 'please select value',
            translations: null,
          },
        ],
        dependencies: [],
        conditionalView: {
          validConditions: 0,
          minimumAcceptableConditionsNumber: null,
          conditions: null,
        },
        relationEquation: null,
        isSubmitted: true,
        savedValues: null,
        tableOperation: null,
      },
      {
        options: [],
        cascadingChildrenIndexes: [9, 10],
        cascadingParentIndexes: [6, 7],
        searchChildrenIndexes: null,
        isMultiSelect: false,
        isCancelDelegation: false,
        isExternalDataSource: true,
        value: [],
        id: 'Drop-6',
        type: 'DropDown',
        format: '',
        contentType: null,
        index: 8,
        formCode: null,
        valuePathEn: null,
        valuePathAr: null,
        readOnly: false,
        isVisibleInViewMode: false,
        isRequired: true,
        isValueDynamic: false,
        dataSourceType: 'lov',
        dataSourceUrl: 'Value/GetDynamicByListCode/City?parameters={0},{1}',
        dataSourceId: 'lov-143',
        mappedValue: null,
        name: 'City',
        translations: null,
        label: 'City',
        description: null,
        placeHolder: 'Select City',
        isVisible: true,
        roles: [],
        icon: '',
        style: {
          border: '',
          borderType: '',
          borderColor: '',
          backgroundColor: '',
          textColor: '',
          textAlign: '',
          font: '',
          fontSize: '',
        },
        validations: [
          {
            name: 'required',
            value: '',
            message: 'please select value',
            translations: null,
          },
        ],
        dependencies: [],
        conditionalView: {
          validConditions: 0,
          minimumAcceptableConditionsNumber: null,
          conditions: null,
        },
        relationEquation: null,
        isSubmitted: true,
        savedValues: null,
        tableOperation: null,
      },
      {
        options: [],
        cascadingChildrenIndexes: [10],
        cascadingParentIndexes: [6, 7, 8],
        searchChildrenIndexes: null,
        isMultiSelect: false,
        isCancelDelegation: false,
        isExternalDataSource: true,
        value: [],
        id: 'Drop-7',
        type: 'DropDown',
        format: '',
        contentType: null,
        index: 9,
        formCode: null,
        valuePathEn: null,
        valuePathAr: null,
        readOnly: false,
        isVisibleInViewMode: false,
        isRequired: true,
        isValueDynamic: false,
        dataSourceType: 'lov',
        dataSourceUrl:
          'Value/GetDynamicByListCode/Building?parameters={0},{1},{2}',
        dataSourceId: 'lov-144',
        mappedValue: null,
        name: 'Building',
        translations: null,
        label: 'Building',
        description: null,
        placeHolder: 'Select Building',
        isVisible: true,
        roles: [],
        icon: '',
        style: {
          border: '',
          borderType: '',
          borderColor: '',
          backgroundColor: '',
          textColor: '',
          textAlign: '',
          font: '',
          fontSize: '',
        },
        validations: [
          {
            name: 'required',
            value: '',
            message: 'please select value',
            translations: null,
          },
        ],
        dependencies: [],
        conditionalView: {
          validConditions: 0,
          minimumAcceptableConditionsNumber: null,
          conditions: null,
        },
        relationEquation: null,
        isSubmitted: true,
        savedValues: null,
        tableOperation: null,
      },
      {
        options: [
          {
            value: true,
            label: 'Active',
          },
          {
            value: false,
            label: 'isActive',
          },
        ],
        cascadingChildrenIndexes: null,
        cascadingParentIndexes: null,
        isMultiSelect: false,
        isExternalDataSource: false,
        value: [],
        id: 'Drop-1',
        type: 'radioState',
        format: '',
        contentType: null,
        index: 1,
        formCode: null,
        valuePathEn: null,
        valuePathAr: null,
        readOnly: false,
        isVisibleInViewMode: false,
        isRequired: true,
        isValueDynamic: true,
        dataSourceType: 'lov',
        dataSourceUrl: null,
        dataSourceId: 'lov-71',
        name: 'isActive',
        translations: null,
        label: 'Status',
        description: null,
        isVisible: true,
        roles: [],
        icon: '',
        style: {
          border: '',
          borderType: '',
          borderColor: '',
          backgroundColor: '',
          textColor: '',
          textAlign: '',
          font: '',
          fontSize: '',
        },
        validations: [
          {
            name: 'required',
            value: '',
            message: 'please select Request Type',
            translations: null,
          },
        ],
        dependencies: [],
        conditionalView: {
          validConditions: 0,
          minimumAcceptableConditionsNumber: null,
          conditions: null,
        },
        isSubmitted: true,
        savedValues: null,
        tableOperation: null,
      },
      {
        value: ['SRGAA5V0F751SARAKDWCQZLDXFIQC6'],
        id: 'text-6',
        type: 'TextBox',
        format: '',
        contentType: null,
        index: 16,
        formCode: null,
        valuePathEn: null,
        valuePathAr: null,
        readOnly: true,
        isVisibleInViewMode: false,
        isRequired: false,
        isValueDynamic: false,
        dataSourceType: '',
        dataSourceUrl: null,
        dataSourceId: '',
        mappedValue: null,
        name: 'SRDInstance',
        translations: null,
        label: 'SRD Instance',
        description: null,
        placeHolder: '',
        isVisible: false,
        roles: [],
        icon: '',
        style: {
          border: '',
          borderType: '',
          borderColor: '',
          backgroundColor: '',
          textColor: '',
          textAlign: '',
          font: '',
          fontSize: '',
        },
        validations: [],
        dependencies: [],
        conditionalView: {
          validConditions: 0,
          minimumAcceptableConditionsNumber: null,
          conditions: null,
        },
        relationEquation: null,
        isSubmitted: true,
        savedValues: null,
        tableOperation: null,
      },
    ];
  }

  mappingData() {
    return [
      {
        key: 'classId',
        type: 'dropdown',
        templateOptions: {
          options: this.classes,
          optionLabelPropertyName: 'text',
          imagePropertyName: 'image',
          optionLayout: 'label',
          selectedOptionLayout: 'label',
          bindValue: 'key',
          defaultValue: '',
          index: 1,
          name: 'classId',
          cascadingParentIndexes: null,
          cascadingChildrenIndexes: [2],
        },
        hooks: {
          onInit: (parentField: any) => {
            this.controlCascadingService.onInitHook(parentField);
          },
        },
      },
      {
        key: 'workTypeId',
        type: 'dropdown',
        templateOptions: {
          options: [],
          optionLabelPropertyName: 'text',
          imagePropertyName: 'image',
          optionLayout: 'label',
          selectedOptionLayout: 'label',
          bindValue: 'key',
          defaultValue: '',
          index: 2,
          name: 'workTypeId',
          cascadingParentIndexes: [1],
          cascadingChildrenIndexes: null,
          dataSourceUrl:
            'Value/GetDynamicByListCode/FacilityServicesWorkType?parameters={0}',
        },
        hideExpression: (model: any, formState: any, field: any) =>
          !field?.templateOptions?.options?.length,
        expressionProperties: {
          'templateOptions.disabled': (model: any, formState: any, field: any) => this.controlExpressionService.disabledExpression(field),
        }
      },

      {
        key: 'department',
        type: 'dropdown',
        templateOptions: {
          options: this.departments,
          optionLabelPropertyName: 'text',
          imagePropertyName: 'image',
          optionLayout: 'label',
          selectedOptionLayout: 'label',
          bindValue: 'key',
          defaultValue: '',
          index: 3,
          name: 'department',
          cascadingParentIndexes: null,
          cascadingChildrenIndexes: [4, 5, 6, 7],
        },
        hooks: {
          onInit: (parentField: any) => {
            this.controlCascadingService.onInitHook(parentField);
          },
        },
      },
      {
        key: 'region',
        type: 'dropdown',
        templateOptions: {
          options: [],
          optionLabelPropertyName: 'text',
          imagePropertyName: 'image',
          optionLayout: 'label',
          selectedOptionLayout: 'label',
          bindValue: 'key',
          defaultValue: '',
          index: 4,
          name: 'region',
          cascadingParentIndexes: [3],
          cascadingChildrenIndexes: [5, 6, 7],
          dataSourceUrl: 'Value/GetDynamicByListCode/Region?parameters={0}',
        },
        hideExpression: (model: any, formState: any, field: any) => this.controlExpressionService.cascading(field),
      },
      {
        key: 'city',
        type: 'dropdown',
        templateOptions: {
          options: [],
          optionLabelPropertyName: 'text',
          imagePropertyName: 'image',
          optionLayout: 'label',
          selectedOptionLayout: 'label',
          bindValue: 'key',
          defaultValue: '',
          index: 5,
          name: 'city',
          cascadingParentIndexes: [3, 4],
          cascadingChildrenIndexes: [6, 7],
          dataSourceUrl: 'Value/GetDynamicByListCode/City?parameters={0},{1}',
        },
        hideExpression: (model: any, formState: any, field: any) => this.controlExpressionService.cascading(field),
      },
      {
        key: 'building',
        type: 'dropdown',
        templateOptions: {
          options: [],
          optionLabelPropertyName: 'text',
          imagePropertyName: 'image',
          optionLayout: 'label',
          selectedOptionLayout: 'label',
          bindValue: 'key',
          defaultValue: '',
          index: 6,
          name: 'building',
          cascadingParentIndexes: [3, 4, 5],
          cascadingChildrenIndexes: [7],
          dataSourceUrl:
            'Value/GetDynamicByListCode/Building?parameters={0},{1},{2}',
        },
        hideExpression: (model: any, formState: any, field: any) => this.controlExpressionService.cascading(field),
      },
      {
        key: 'floor',
        type: 'dropdown',
        templateOptions: {
          options: [],
          optionLabelPropertyName: 'text',
          imagePropertyName: 'image',
          optionLayout: 'label',
          selectedOptionLayout: 'label',
          bindValue: 'key',
          defaultValue: '',
          index: 7,
          name: 'floor',
          cascadingParentIndexes: [3, 4, 5, 6],
          cascadingChildrenIndexes: null,
          dataSourceUrl:
            'Value/GetDynamicByListCode/MobilyFloors?parameters={0},{1},{2},{3}',
        },
        hideExpression: (model: any, formState: any, field: any) => this.controlExpressionService.cascading(field),
      },

      {
        key: 'isActive',
        type: 'radioState',
        templateOptions: {
          label: 'Status',
          name: 'isActive',
          options: [
            {
              value: true,
              label: 'Active',
            },
            {
              value: false,
              label: 'isActive',
            },
          ],
          index: 8,
        },
      },
      {
        key: 'SRDInstance',
        type: 'text',
        templateOptions: {
          label: 'SRD Instance',
          required: true,
          fieldInlineStyle: {
            gap: '6px',
            inputErrorStyle: {
              border: '1px solid var(--crimson)',
            },
          },
          index: 9,
          conditionalView: {
            validConditions: 0,
            minimumAcceptableConditionsNumber: 1,
            conditions: [
              {
                parentFieldId: "",
                parentFieldIndex: 8,
                validationName: "value",
                value: "",
                validityStatus: false
              }
            ]
          }
        },
        hideExpression: (model: any, formState: any, field: any) => this.controlExpressionService.hideExpression(field),
        expressionProperties: {
          'templateOptions.disabled': (model: any, formState: any, field: any) => this.controlExpressionService.disabledExpression(field),
        }
      },
    ];
  }
}
